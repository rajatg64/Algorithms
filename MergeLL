__author__ = 'RAJAT'
# Merge a linked list into another linked list at alternate positions
class Node:
    def __init__(self , data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def push (self, data):
        temp = Node(data)
        if self.head == None:
            self.head=temp
        else:
            list = self.head
            self.head = temp
            temp.next = list

    def append(self, data):
        temp = Node(data)
        if self.head == None:
            self.head = temp
        else:
            t = self.head
            while(t.next):
                t = t.next
            t.next = temp
    def print(self):
        temp = self.head

        while(temp):
            print(temp.data)
            temp = temp.next

    def merge(self , list1):
        p_head = self.head
        q_head = llist1.head

        while p_head!=None and q_head!=None:
            p_next = p_head.next
            q_next = q_head.next

            p_head.next = q_head
            q_head.next = p_next


            p_head = p_next
            q_head = q_next
        list1.head = q_head


llist = LinkedList()

llist.append(10)
llist.append(20)
llist.append(30)

llist1 = LinkedList()
llist1.append(15)
llist1.append(25)
llist1.append(35)


llist.merge(llist1)

llist.print()
llist1.print()


